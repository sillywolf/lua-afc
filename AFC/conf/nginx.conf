
#user  nobody;
#worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    lua_package_path "/lcims/work/shixl/lualib/?.lua;/lcims/work/shixl/lualib/?/init.lua;/lcims/work/renyb/tengine/luas/?.lua;;";
    lua_shared_dict rules 1m;
    init_by_lua_file luas/init_afc.lua;
    #access_by_lua_file luas/afc.lua;
    upstream memc_pool{
      server 192.168.97.143:11211;
      # a pool with at most 1024 connections
      # and do not distinguish the servers:
      keepalive 1024;
    }  

    server {
        listen       12121;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        
        lua_code_cache off;
        
				location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
				  expires      30d;
				}
				
				location ~ .*\.(js|css)?$ {
				  expires      1h;
				}
        
        location / {
            root   html;
            index  index.html index.htm;
            
            default_type 'text/plain';
            #content_by_lua_file luas/test_init_afc.lua;
            content_by_lua_file luas/base_test.lua;
        }

        location = /memc_rules {
            internal;
            set $memcached_cmd $arg_cmd;
            set $memcached_key $arg_key; 
            set $memcached_value $arg_val; 
            set $memcached_flags $arg_flags;
            set $memcached_exptime $arg_exptime;
            memcached_pass memc_pool;
        }
	location = /memc {
           default_type 'text/plain';
	   set $memc_cmd $arg_cmd;
           set $memc_key $arg_key;
           set $memc_value $arg_val;
           set $memc_flags $arg_flags; # defaults to 0
           set $memc_exptime $arg_exptime; # defaults to 0
 
           memc_cmds_allowed get set add delete flush_all; 
	   memc_pass memc_pool;
	}
	location = /luamemc {
	   default_type 'text/plain';
	   content_by_lua_file luas/luamemc.lua;
	}
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
